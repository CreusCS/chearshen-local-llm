# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import video_analyzer_pb2 as video__analyzer__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in video_analyzer_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class VideoAnalyzerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TranscribeVideo = channel.stream_unary(
                '/videoanalyzer.VideoAnalyzer/TranscribeVideo',
                request_serializer=video__analyzer__pb2.VideoUploadChunk.SerializeToString,
                response_deserializer=video__analyzer__pb2.TranscriptionResponse.FromString,
                _registered_method=True)
        self.Chat = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/Chat',
                request_serializer=video__analyzer__pb2.ChatRequest.SerializeToString,
                response_deserializer=video__analyzer__pb2.ChatResponse.FromString,
                _registered_method=True)
        self.GetChatHistory = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/GetChatHistory',
                request_serializer=video__analyzer__pb2.ChatHistoryRequest.SerializeToString,
                response_deserializer=video__analyzer__pb2.ChatHistoryResponse.FromString,
                _registered_method=True)
        self.ClearChatHistory = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/ClearChatHistory',
                request_serializer=video__analyzer__pb2.SessionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GeneratePdf = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/GeneratePdf',
                request_serializer=video__analyzer__pb2.GeneratePdfRequest.SerializeToString,
                response_deserializer=video__analyzer__pb2.GeneratePdfResponse.FromString,
                _registered_method=True)
        self.GetSessionContext = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/GetSessionContext',
                request_serializer=video__analyzer__pb2.SessionRequest.SerializeToString,
                response_deserializer=video__analyzer__pb2.SessionContextResponse.FromString,
                _registered_method=True)
        self.Health = channel.unary_unary(
                '/videoanalyzer.VideoAnalyzer/Health',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=video__analyzer__pb2.HealthResponse.FromString,
                _registered_method=True)


class VideoAnalyzerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TranscribeVideo(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GeneratePdf(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSessionContext(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Health(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VideoAnalyzerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TranscribeVideo': grpc.stream_unary_rpc_method_handler(
                    servicer.TranscribeVideo,
                    request_deserializer=video__analyzer__pb2.VideoUploadChunk.FromString,
                    response_serializer=video__analyzer__pb2.TranscriptionResponse.SerializeToString,
            ),
            'Chat': grpc.unary_unary_rpc_method_handler(
                    servicer.Chat,
                    request_deserializer=video__analyzer__pb2.ChatRequest.FromString,
                    response_serializer=video__analyzer__pb2.ChatResponse.SerializeToString,
            ),
            'GetChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatHistory,
                    request_deserializer=video__analyzer__pb2.ChatHistoryRequest.FromString,
                    response_serializer=video__analyzer__pb2.ChatHistoryResponse.SerializeToString,
            ),
            'ClearChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearChatHistory,
                    request_deserializer=video__analyzer__pb2.SessionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GeneratePdf': grpc.unary_unary_rpc_method_handler(
                    servicer.GeneratePdf,
                    request_deserializer=video__analyzer__pb2.GeneratePdfRequest.FromString,
                    response_serializer=video__analyzer__pb2.GeneratePdfResponse.SerializeToString,
            ),
            'GetSessionContext': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSessionContext,
                    request_deserializer=video__analyzer__pb2.SessionRequest.FromString,
                    response_serializer=video__analyzer__pb2.SessionContextResponse.SerializeToString,
            ),
            'Health': grpc.unary_unary_rpc_method_handler(
                    servicer.Health,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=video__analyzer__pb2.HealthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'videoanalyzer.VideoAnalyzer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('videoanalyzer.VideoAnalyzer', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class VideoAnalyzer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TranscribeVideo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/videoanalyzer.VideoAnalyzer/TranscribeVideo',
            video__analyzer__pb2.VideoUploadChunk.SerializeToString,
            video__analyzer__pb2.TranscriptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Chat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/Chat',
            video__analyzer__pb2.ChatRequest.SerializeToString,
            video__analyzer__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/GetChatHistory',
            video__analyzer__pb2.ChatHistoryRequest.SerializeToString,
            video__analyzer__pb2.ChatHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClearChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/ClearChatHistory',
            video__analyzer__pb2.SessionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GeneratePdf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/GeneratePdf',
            video__analyzer__pb2.GeneratePdfRequest.SerializeToString,
            video__analyzer__pb2.GeneratePdfResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSessionContext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/GetSessionContext',
            video__analyzer__pb2.SessionRequest.SerializeToString,
            video__analyzer__pb2.SessionContextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Health(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/videoanalyzer.VideoAnalyzer/Health',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            video__analyzer__pb2.HealthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
